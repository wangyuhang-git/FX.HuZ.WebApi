using System;
using System.Collections;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Text;
using System.Web.Http;
using FX.FP.Busines.NewDAL;
using FX.FP.Common.DotNetExt;
using FX.HuZ.WebApi.Business;
using FX.HuZ.WebApi.Models;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace FX.HuZ.WebApi.Controllers
{
    /// <summary>
    /// 扬尘数据接收接口
    /// </summary>
    public class DustReceiveController : ApiController
    {
        protected Common_Dal comdal = new Common_Dal();
        #region 方式一
        /// <summary>
        /// HttpClient方式掉用
        /// </summary>
        /// <param name="jobject"></param>
        [HttpPost]
        public IHttpActionResult Post([FromBody]JObject jobject)
        {
            string message = "接收数据成功";
            dynamic entity = jobject;
            try
            {
                Helper.SaveLog("cmp接收:" + JsonConvert.SerializeObject(entity));
                if (entity != null)
                {
                    string sign = entity.sign;
                    string address = entity.address;
                    string longitude = entity.longitude;
                    string latitude = entity.latitude;
                    string devName = entity.devName;
                    string deviceId = entity.deviceId;
                    string prodcutId = entity.prodcutId;
                    string appId = entity.appId;
                    string deveui = entity.deveui;
                    string uploadTime = entity.uploadTime;
                    string payload = entity.payload;
                    SetData(JsonConvert.SerializeObject(entity));
                }
            }
            catch (Exception ex)
            {
                message = "接收数据失败：" + ex.Message;
                Helper.SaveLog("cmp接收异常:" + ex.Message);
            }
            if (!string.IsNullOrEmpty(message))
            {
                var result = new
                {
                    result = "02",
                    resultmsg = message
                };
                return Json(result);
            }
            else
            {
                var result = new
                {
                    result = "01",
                    resultmsg = message
                };
                return Json(result);
            }
        }
        #endregion


        #region 方式二
        /*
        /// <summary>
        /// HttpWebRequest方式调用
        /// </summary>
        /// <param name="entity"></param>
        [HttpPost]
        public IHttpActionResult Post(dynamic entity)
        {
            string message = "接收数据成功";
            try
            {
                Helper.SaveLog("cmp接收:" + JsonConvert.SerializeObject(entity));
                if (entity != null)
                {
                    string sign = entity.sign;
                    string address = entity.address;
                    string longitude = entity.longitude;
                    string latitude = entity.latitude;
                    string devName = entity.devName;
                    string deviceId = entity.deviceId;
                    string prodcutId = entity.prodcutId;
                    string appId = entity.appId;
                    string deveui = entity.deveui;
                    string uploadTime = entity.uploadTime;
                    string payload = entity.payload;
                }
            }
            catch (Exception ex)
            {
                message = "接收数据失败：" + ex.Message;
                Helper.SaveLog("cmp接收异常:" + ex.Message);
            }
            if (!string.IsNullOrEmpty(message))
            {
                var result = new
                {
                    result = "02",
                    resultmsg = message
                };
                return Json(result);
            }
            else
            {
                var result = new
                {
                    result = "01",
                    resultmsg = message
                };
                return Json(result);
            }
        }
        */
        #endregion

        #region 保存数据
        private void SetData(string strData)
        {
            try
            {
                strData = "[" + strData + "]";
                Hashtable ht = new Hashtable();
                List<DataBaseModel> baseModel = JsonConvert.DeserializeObject<List<DataBaseModel>>(strData);
                string payload = "[" + baseModel[0].payload + "]";
                List<LoadDataModel> dataModel = JsonConvert.DeserializeObject<List<LoadDataModel>>(payload);
                string deviceId = baseModel[0].deveui;
                /*
                DataTable dtDevice = comdal.GetDataTableBySQL(new StringBuilder(string.Format(@"select top 1 * from LTDQ_Device where   DeviceSN='{0}' order by CreateDate desc", deviceId)));
                DataTable dtDeviceZT = comdal.GetDataTableBySQL(new StringBuilder(string.Format(@"select top 1 * from LTDQ_DeviceZT where DeviceSN='{0}' order by CreateDate desc", deviceId)));
                if (dtDevice != null && dtDevice.Rows.Count == 0 && dtDeviceZT != null && dtDeviceZT.Rows.Count == 0)
                {
                    Helper.SaveLog(deviceId + "设备未绑定项目！");
                    return;
                }
                else if (dtDevice == null && dtDeviceZT == null)
                {
                    string showMsg = "获取数据错误！";
                    Helper.SaveLog(showMsg);
                    return;
                }
                string ProjectGUID = "";
                if (dtDevice.Rows.Count > 0)
                {
                    ProjectGUID = dtDevice.Rows[0]["PROJECTGUID"].ToString();
                }
                else if (dtDeviceZT.Rows.Count > 0)
                {
                    ProjectGUID = dtDeviceZT.Rows[0]["GUID"].ToString();
                }
                */
                List<NodeListDataModel> listData = dataModel[0].nodelist;
                ht.Add("GUID", Guid.NewGuid().ToString());
                ht.Add("DeviceSN", deviceId);
                ht.Add("CreateDate", baseModel[0].uploadTime);
                ht.Add("pm25", listData[0].hum);
                ht.Add("pm10", listData[0].tem);
                ht.Add("pd04", listData[2].tem);
                ht.Add("pd05", listData[2].hum);
                ht.Add("pd09", listData[1].hum);
                ht.Add("LTcontent", "chocking");
                ht.Add("ProjectGUID", "-");
                bool returnValue = comdal.SubmitData("LTDQ_HistoryData", "GUID", string.Empty, ht);
                if (returnValue)
                {
                    DataTable dt = comdal.GetDataTableBySQL(new StringBuilder(string.Format(@" select * from LTDQ_LiveData where DeviceSN='{0}' ", deviceId)));
                    string guid = string.Empty;
                    if (dt != null && dt.Rows.Count > 0)
                    {
                        ht["GUID"] = dt.Rows[0]["GUID"].ToString2();
                        guid = dt.Rows[0]["GUID"].ToString2();
                    }
                    else
                    {
                        ht["GUID"] = Guid.NewGuid().ToString2();
                    }
                    comdal.SubmitData("LTDQ_LiveData", "GUID", guid, ht);
                    if (ht["PM10"].ToDouble() > Double.Parse(ConfigurationManager.AppSettings["MaxPmValue"].ToString().Trim()))
                    {
                        bool flag = comdal.SubmitData("LTDQ_Warning", "GUID", "", ht);
                    }
                    #region 保存区县项目数据
                    DataTable dtSN = comdal.GetDataTableBySQL(new StringBuilder(string.Format(@"SELECT * FROM LTDQ_DeviceZT WHERE DeviceSN='{0}'", deviceId)));
                    Hashtable htTz = new Hashtable();
                    if (dtSN != null && dtSN.Rows.Count == 0)
                    {

                        htTz.Add("GUID", Guid.NewGuid().ToString());
                        htTz.Add("DeviceName", baseModel[0].devName);
                        htTz.Add("DeviceSN", deviceId);
                        htTz.Add("DeviceAddress", baseModel[0].address);
                        htTz.Add("ProjectName", baseModel[0].devName);
                        htTz.Add("Coordinate", dataModel[0].lat + "," + dataModel[0].lng);
                        htTz.Add("RegisterPerson", "cmp平台");
                        htTz.Add("ProjectDate", baseModel[0].uploadTime);
                        htTz.Add("ProjectArea", "---");
                        bool result = comdal.SubmitData("LTDQ_DeviceZT", "GUID", string.Empty, htTz);
                        if (result)
                        {
                            Helper.SaveLog("保存区县项目数据成功");
                        }
                        else
                        {
                            Helper.SaveLog("保存区县项目数据失败");
                        }
                    }
                    else
                    {
                        htTz.Add("GUID", dtSN.Rows[0]["GUID"].ToString());
                        htTz.Add("DeviceName", baseModel[0].devName);
                        htTz.Add("DeviceSN", deviceId);
                        htTz.Add("DeviceAddress", baseModel[0].address);
                        htTz.Add("ProjectName", baseModel[0].devName);
                        htTz.Add("Coordinate", dataModel[0].lat + "," + dataModel[0].lng);
                        htTz.Add("RegisterPerson", "cmp平台");
                        htTz.Add("ProjectDate", baseModel[0].uploadTime);
                        htTz.Add("ProjectArea", "---");
                        bool result = comdal.SubmitData("LTDQ_DeviceZT", "GUID", htTz["GUID"].ToString(), htTz);
                        if (result)
                        {
                            Helper.SaveLog("更新区县项目数据成功");
                        }
                        else
                        {
                            Helper.SaveLog("更新区县项目数据失败");
                        }
                    }

                    #endregion
                    #region DEL
                    /*
                    if (dtDevice.Rows.Count > 0)
                    {
                        //更改设备为已接入
                        if (dtDevice.Rows[0]["ISBIND"] == DBNull.Value || dtDevice.Rows[0]["ISBIND"].ToString2() == "0")
                        {
                            comdal.ExecuteBySql(new StringBuilder(string.Format("update LTDQ_Device set IsBind=1 where DeviceSN='{0}'", deviceId)));
                        }
                        //更改设备为在线
                        if (dtDevice.Rows[0]["OnlineStatus"] == DBNull.Value || dtDevice.Rows[0]["OnlineStatus"].ToString2() == "0")
                        {
                            comdal.ExecuteBySql(new StringBuilder(string.Format("update LTDQ_Device set OnlineStatus=1 where DeviceSN='{0}'", deviceId)));
                        }
                    }
                    else if (dtDeviceZT.Rows.Count > 0)
                    {
                        //更改设备为已接入
                        if (dtDeviceZT.Rows[0]["ISBIND"] == DBNull.Value || dtDeviceZT.Rows[0]["ISBIND"].ToString2() == "0")
                        {
                            comdal.ExecuteBySql(new StringBuilder(string.Format("update LTDQ_DeviceZT set IsBind=1 where DeviceSN='{0}'", deviceId)));
                        }
                        //更改设备为在线
                        if (dtDeviceZT.Rows[0]["OnlineStatus"] == DBNull.Value || dtDeviceZT.Rows[0]["OnlineStatus"].ToString2() == "0")
                        {
                            comdal.ExecuteBySql(new StringBuilder(string.Format("update LTDQ_DeviceZT set OnlineStatus=1 where DeviceSN='{0}'", deviceId)));
                        }
                    }
                    */
                    #endregion
                }
                else
                {
                    Helper.SaveLog(deviceId + "设备未绑定项目！");
                }

            }
            catch (Exception ex)
            {
                Helper.SaveLog("保存数据异常！" + ex.Message);
            }
        }
        #endregion
    }
}