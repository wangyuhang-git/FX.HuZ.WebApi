using FX.FP.Busines.NewDAL;
using FX.FP.Common.DotNetExt;
using FX.HuZ.WebApi.Business;
using FX.HuZ.WebApi.Converter;
using FX.HuZ.WebApi.Models.Dust;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Text;
using System.Web.Http;
using System.Web.Http.ModelBinding;

namespace FX.HuZ.WebApi.Controllers
{
    /// <summary>
    /// 接收DMP（新）平台推送扬尘数据接口
    /// </summary>
    public class DustNewReceiveController : ApiController
    {
        protected Common_Dal comdal = new Common_Dal();
        #region 方式一
        /// <summary>
        /// HttpClient方式掉用
        /// </summary>
        /// <param name="jobject"></param>
        [HttpPost]
        public IHttpActionResult Post([FromBody] JObject jobject)
        {
            dynamic entity = jobject;
            var message = string.Empty;
            try
            {
                string strDustInfo = entity.iot_sys_raw;
                var dustInfo= JsonConvert.DeserializeObject<DataBaseNewModel>(strDustInfo);
                if (dustInfo == null || dustInfo.Data == null || dustInfo.Data.Params == null)
                {
                    message = "接收数据为空！";
                    return Json(new { result = "02", resultmsg= message });
                }
                SetData(dustInfo.Data.Params);
            }
            catch (Exception ex)
            {
                message = "DustNewDmp接收数据失败：" + ex.Message;
                Helper.SaveLog("DustNewDmp接收异常:" + ex.Message, "DustNewReceive");
            }
            if (!string.IsNullOrEmpty(message))
                return Json(new { result = "02", resultmsg = message });
            else
                return Json(new { result = "01", resultmsg = message });
        }
        #endregion

        #region 保存数据
        private void SetData(DustInfoNewModel dustInfo)
        {
            try
            {
                Hashtable ht = new Hashtable();
                //List<DataBaseModel> baseModel = JsonConvert.DeserializeObject<List<DataBaseModel>>(strData);
                //string payload = "[" + baseModel[0].payload + "]";
                //List<LoadDataModel> dataModel = JsonConvert.DeserializeObject<List<LoadDataModel>>(payload);
                //deviceId = baseModel[0].deveui;
                //List<NodeListDataModel> listData = dustInfo.nodelist;

                if (null != dustInfo.Nodelist && dustInfo.Nodelist.Count > 0)
                {
                    //mondify on 20191225 如该设备十分钟内有数据的就不在接收
                    object hasData = comdal.ExecuteScalar(string.Format(@" select guid from LTDQ_LiveData where DeviceSN='{0}' and CreateDate > dateadd(minute,-10,GETDATE())", dustInfo.DeviceId));
                    if (null == hasData || Convert.IsDBNull(hasData))
                    {

                        //mondify on 20200107 对神威科技,杭州豪测测绘仪器有限公司, 安吉先锋三家厂商的pm25和pm10做*10
                        double pm25, pm10;
                        double.TryParse(dustInfo.Nodelist[0].Hum, out pm25);
                        double.TryParse(dustInfo.Nodelist[0].Tem, out pm10);
                        //hasData = comdal.ExecuteScalar(string.Format(@"select  Manufacturer from LTDQ_LianTongBook where DeviceSN='{0}'", dustInfo.DeviceId));
                        //string[] ManufacturerList = new string[] { "神威科技", "杭州豪测测绘仪器有限公司", "安吉先锋" };
                        //if (null != hasData)
                        //{
                        //    if (ManufacturerList.Contains(hasData.ToString2()))
                        //    {
                        //        pm25 = pm25 * 10;
                        //        pm10 = pm10 * 10;
                        //    }
                        //}

                        //市本级
                        DataTable dtSNSBJ = comdal.GetDataTableBySQL(new StringBuilder(string.Format(@"SELECT * FROM LTDQ_Device WHERE DeviceSN='{0}'", dustInfo.DeviceId)));
                        if (dtSNSBJ != null && dtSNSBJ.Rows.Count > 0)
                        {
                            ht.Add("GUID", Guid.NewGuid().ToString());
                            ht.Add("DeviceSN", dustInfo.DeviceId);
                            ht.Add("CreateDate", dustInfo.ReportDate);
                            ht.Add("pm25", pm25);
                            ht.Add("pm10", pm10);
                            ht.Add("pd04", dustInfo.Nodelist[2].Tem);//温度
                            ht.Add("pd05", dustInfo.Nodelist[2].Hum);//湿度
                            ht.Add("pd09", dustInfo.Nodelist[1].Hum);//噪声
                            ht.Add("LTcontent", "chocking");
                            ht.Add("ProjectGUID", dtSNSBJ.Rows[0]["ProjectGUID"]);
                            bool returnValue = comdal.SubmitData("LTDQ_HistoryData", "GUID", string.Empty, ht);
                            if (returnValue)
                            {
                                DataTable dt = comdal.GetDataTableBySQL(new StringBuilder(string.Format(@" select * from LTDQ_LiveData where DeviceSN='{0}' ", dustInfo.DeviceId)));
                                string guid = string.Empty;
                                if (dt != null && dt.Rows.Count > 0)
                                {
                                    ht["GUID"] = dt.Rows[0]["GUID"].ToString2();
                                    guid = dt.Rows[0]["GUID"].ToString2();
                                }
                                else
                                {
                                    ht["GUID"] = Guid.NewGuid().ToString2();
                                }
                                comdal.SubmitData("LTDQ_LiveData", "GUID", guid, ht);
                                if (ht["PM10"].ToDouble() > Double.Parse(ConfigurationManager.AppSettings["MaxPmValue"].ToString().Trim()))
                                {
                                    ht["GUID"] = Guid.NewGuid().ToString2();
                                    bool flag = comdal.SubmitData("LTDQ_Warning", "GUID", "", ht);
                                }

                                //更改设备为已接入
                                if (dtSNSBJ.Rows[0]["ISBIND"] == DBNull.Value || dtSNSBJ.Rows[0]["ISBIND"].ToString2() == "0")
                                {
                                    comdal.ExecuteBySql(new StringBuilder(string.Format("update LTDQ_Device set IsBind=1 where DeviceSN='{0}'", dustInfo.DeviceId)));
                                }
                            }
                            else
                            {
                                Helper.SaveLog(dustInfo.DeviceId + "设备未绑定项目！", "DustReceive");
                            }
                        }
                        else
                        {

                            DataTable dtSN = comdal.GetDataTableBySQL(new StringBuilder(string.Format(@"SELECT * FROM LTDQ_DeviceZT WHERE DeviceSN='{0}'", dustInfo.DeviceId)));
                            if (dtSN != null && dtSN.Rows.Count == 0)
                            {
                                ht.Add("GUID", Guid.NewGuid().ToString());
                                ht.Add("DeviceSN", dustInfo.DeviceId);
                                ht.Add("CreateDate", dustInfo.ReportDate);
                                ht.Add("pm25", pm25);
                                ht.Add("pm10", pm10);
                                ht.Add("pd04", dustInfo.Nodelist[2].Tem);//温度
                                ht.Add("pd05", dustInfo.Nodelist[2].Hum);//湿度
                                ht.Add("pd09", dustInfo.Nodelist[1].Hum);//噪声
                                ht.Add("LTcontent", "chocking");
                                ht.Add("ProjectGUID", "-");
                                bool returnValue = comdal.SubmitData("LTDQ_HistoryData", "GUID", string.Empty, ht);
                                if (returnValue)
                                {
                                    DataTable dt = comdal.GetDataTableBySQL(new StringBuilder(string.Format(@" select * from LTDQ_LiveData where DeviceSN='{0}' ", dustInfo.DeviceId)));
                                    string guid = string.Empty;
                                    if (dt != null && dt.Rows.Count > 0)
                                    {
                                        ht["GUID"] = dt.Rows[0]["GUID"].ToString2();
                                        guid = dt.Rows[0]["GUID"].ToString2();
                                    }
                                    else
                                    {
                                        ht["GUID"] = Guid.NewGuid().ToString2();
                                    }
                                    comdal.SubmitData("LTDQ_LiveData", "GUID", guid, ht);
                                    if (ht["PM10"].ToDouble() > Double.Parse(ConfigurationManager.AppSettings["MaxPmValue"].ToString().Trim()))
                                    {
                                        ht["GUID"] = Guid.NewGuid().ToString2();
                                        bool flag = comdal.SubmitData("LTDQ_Warning", "GUID", "", ht);
                                    }
                                    #region 保存区县项目数据
                                    Hashtable htTz = new Hashtable();
                                    htTz.Add("GUID", Guid.NewGuid().ToString());
                                    //htTz.Add("DeviceName", baseModel[0].devName);
                                    htTz.Add("DeviceSN", dustInfo.DeviceId);
                                    //htTz.Add("DeviceAddress", baseModel[0].address);
                                    //htTz.Add("ProjectName", baseModel[0].devName);
                                    htTz.Add("Coordinate", dustInfo.Lng + "," + dustInfo.Lat);
                                    htTz.Add("RegisterPerson", "cmp平台");
                                    htTz.Add("ProjectDate", dustInfo.ReportDate);
                                    htTz.Add("ProjectArea", "---");
                                    bool result = comdal.SubmitData("LTDQ_DeviceZT", "GUID", string.Empty, htTz);
                                    if (result)
                                    {
                                        //Helper.SaveLog("保存区县项目数据成功","DustReceive");
                                    }
                                    else
                                    {
                                        Helper.SaveLog("保存区县项目数据失败", "DustReceive");
                                    }
                                    #endregion
                                }
                                else
                                {
                                    Helper.SaveLog(dustInfo.DeviceId + "设备未绑定项目！", "DustReceive");
                                }
                            }
                            else
                            {
                                ht.Add("GUID", Guid.NewGuid().ToString());
                                ht.Add("DeviceSN", dustInfo.DeviceId);
                                ht.Add("CreateDate", dustInfo.ReportDate);
                                ht.Add("pm25", pm25);
                                ht.Add("pm10", pm10);
                                ht.Add("pd04", dustInfo.Nodelist[2].Tem);
                                ht.Add("pd05", dustInfo.Nodelist[2].Hum);
                                ht.Add("pd09", dustInfo.Nodelist[1].Hum);
                                ht.Add("LTcontent", "chocking");
                                ht.Add("ProjectGUID", dtSN.Rows[0]["GUID"].ToString());
                                bool returnValue = comdal.SubmitData("LTDQ_HistoryData", "GUID", string.Empty, ht);
                                if (returnValue)
                                {
                                    DataTable dt = comdal.GetDataTableBySQL(new StringBuilder(string.Format(@" select * from LTDQ_LiveData where DeviceSN='{0}' ", dustInfo.DeviceId)));
                                    string guid = string.Empty;
                                    if (dt != null && dt.Rows.Count > 0)
                                    {
                                        ht["GUID"] = dt.Rows[0]["GUID"].ToString2();
                                        guid = dt.Rows[0]["GUID"].ToString2();
                                    }
                                    else
                                    {
                                        ht["GUID"] = Guid.NewGuid().ToString2();
                                    }
                                    comdal.SubmitData("LTDQ_LiveData", "GUID", guid, ht);
                                    if (ht["PM10"].ToDouble() > Double.Parse(ConfigurationManager.AppSettings["MaxPmValue"].ToString().Trim()))
                                    {
                                        ht["GUID"] = Guid.NewGuid().ToString2();
                                        bool flag = comdal.SubmitData("LTDQ_Warning", "GUID", "", ht);
                                    }
                                    #region 保存区县项目数据
                                    Hashtable htTz = new Hashtable();
                                    htTz.Add("GUID", dtSN.Rows[0]["GUID"].ToString());
                                    //htTz.Add("DeviceName", baseModel[0].devName);
                                    //htTz.Add("DeviceSN", dustInfo.DeviceId);
                                    //htTz.Add("DeviceAddress", baseModel[0].address);
                                    //htTz.Add("ProjectName", baseModel[0].devName);
                                    //htTz.Add("Coordinate", dustInfo.lng + "," + dustInfo.lat);
                                    htTz.Add("RegisterPerson", "cmp平台");
                                    htTz.Add("ProjectDate", dustInfo.ReportDate);
                                    htTz.Add("IsBind", 1);
                                    //htTz.Add("ProjectArea", "---");
                                    bool result = comdal.SubmitData("LTDQ_DeviceZT", "GUID", htTz["GUID"].ToString(), htTz);
                                    if (result)
                                    {
                                        //Helper.SaveLog("更新区县项目数据成功","DustReceive");
                                    }
                                    else
                                    {
                                        Helper.SaveLog("更新区县项目数据失败", "DustReceive");
                                    }
                                    #endregion
                                }
                                else
                                {
                                    Helper.SaveLog(dustInfo.DeviceId + "设备未绑定项目！", "DustReceive");
                                }
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                //Helper.SaveLog("Dmp参数：" + strData + ",保存数据异常！" + ex.Message, "DustReceive异常");
                Helper.SaveLog("保存数据异常！" + ex.Message, "DustReceive异常");
            }
        }
        #endregion
    }
}